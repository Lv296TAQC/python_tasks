<ns0:test-suite xmlns:ns0="urn:model.allure.qatools.yandex.ru" start="1521801167472" stop="1521801167542">
  <name>tests.pytest.test_task_329</name>
  <labels/>
  <test-cases>
    <test-case start="1521801167472" status="passed" stop="1521801167474">
      <name>test_sum_of_digits_suitable_args[15-6]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167474" status="passed" stop="1521801167475">
      <name>test_sum_of_digits_suitable_args[1-1]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167476" status="passed" stop="1521801167477">
      <name>test_sum_of_digits_suitable_args[0-0]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167477" status="failed" stop="1521801167482">
      <name>test_sum_of_digits_suitable_args[-1-1]</name>
      <failure>
        <message>ValueError: invalid literal for int() with base 10: '-'</message>
        <stack-trace>a = -1, b = 1

    @pytest.mark.suit
    @pytest.mark.parametrize('a, b', [
        (15, 6),
        (1, 1),
        (0, 0),
        (-1, 1)
    ])
    def test_sum_of_digits_suitable_args(a, b):
&gt;       assert sum_of_digits(a) == b

tests/pytest/test_task_329.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number = -1

    def sum_of_digits(number):
        """"
        Return the sum of digits of entered number
    
        Arg:
            number(int): any natural number
    
        Return:
            int, where return sum of the digits
        """
        translate_var = str(number)
        result_integer = 0
        for i in translate_var:
&gt;           result_integer += int(i)
E           ValueError: invalid literal for int() with base 10: '-'

tasks/task_329.py:17: ValueError</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167483" status="passed" stop="1521801167484">
      <name>test_sum_of_digits_unsuitable_args[12.8]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167485" status="passed" stop="1521801167485">
      <name>test_sum_of_digits_unsuitable_args[0.0]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167486" status="canceled" stop="1521801167487">
      <name>test_sum_of_digits_str_arg</name>
      <failure>
        <message>Skipped: unconditional skip</message>
        <stack-trace></stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167487" status="passed" stop="1521801167488">
      <name>test_main_func_suitable_args[24-36-c0]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167489" status="passed" stop="1521801167491">
      <name>test_main_func_suitable_args[-24-36-c1]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167492" status="failed" stop="1521801167497">
      <name>test_main_func_suitable_args[3-4-c2]</name>
      <failure>
        <message>AssertionError: assert [2] == []
  Left contains more items, first extra item: 2
  Use -v to get the full diff</message>
        <stack-trace>a = 3, b = 4, c = []

    @pytest.mark.suit
    @pytest.mark.parametrize('a, b, c', [
        (24, 36, [6, 15]),
        (-24, 36, []),
        (3, 4, []),
        (36, 36, []),
        (0, 0, [])
    
    ])
    def test_main_func_suitable_args(a, b, c):
&gt;       assert main_func(a, b) == c
E       assert [2] == []
E         Left contains more items, first extra item: 2
E         Use -v to get the full diff

tests/pytest/test_task_329.py:41: AssertionError</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167498" status="failed" stop="1521801167502">
      <name>test_main_func_suitable_args[36-36-c3]</name>
      <failure>
        <message>AssertionError: assert [6, 15, 24, 33] == []
  Left contains more items, first extra item: 6
  Use -v to get the full diff</message>
        <stack-trace>a = 36, b = 36, c = []

    @pytest.mark.suit
    @pytest.mark.parametrize('a, b, c', [
        (24, 36, [6, 15]),
        (-24, 36, []),
        (3, 4, []),
        (36, 36, []),
        (0, 0, [])
    
    ])
    def test_main_func_suitable_args(a, b, c):
&gt;       assert main_func(a, b) == c
E       assert [6, 15, 24, 33] == []
E         Left contains more items, first extra item: 6
E         Use -v to get the full diff

tests/pytest/test_task_329.py:41: AssertionError</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167503" status="passed" stop="1521801167504">
      <name>test_main_func_suitable_args[0-0-c4]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167504" status="failed" stop="1521801167508">
      <name>test_main_func_unsuitable_args[-100-36]</name>
      <failure>
        <message>Failed: DID NOT RAISE &lt;class 'ValueError'&gt;</message>
        <stack-trace>a = -100, b = 36

    @pytest.mark.exception
    @pytest.mark.parametrize('a, b', [
        (-100, 36),
        (100, -1),
        (-5, -18),
        (24.0, 36),
        (10, 4.5),
        (856.5, 422.1)
    ])
    def test_main_func_unsuitable_args(a, b):
        with pytest.raises(ValueError):
&gt;           main_func(a, b)
E           Failed: DID NOT RAISE &lt;class 'ValueError'&gt;

tests/pytest/test_task_329.py:55: Failed</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167509" status="failed" stop="1521801167512">
      <name>test_main_func_unsuitable_args[100--1]</name>
      <failure>
        <message>Failed: DID NOT RAISE &lt;class 'ValueError'&gt;</message>
        <stack-trace>a = 100, b = -1

    @pytest.mark.exception
    @pytest.mark.parametrize('a, b', [
        (-100, 36),
        (100, -1),
        (-5, -18),
        (24.0, 36),
        (10, 4.5),
        (856.5, 422.1)
    ])
    def test_main_func_unsuitable_args(a, b):
        with pytest.raises(ValueError):
&gt;           main_func(a, b)
E           Failed: DID NOT RAISE &lt;class 'ValueError'&gt;

tests/pytest/test_task_329.py:55: Failed</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167513" status="failed" stop="1521801167517">
      <name>test_main_func_unsuitable_args[-5--18]</name>
      <failure>
        <message>Failed: DID NOT RAISE &lt;class 'ValueError'&gt;</message>
        <stack-trace>a = -5, b = -18

    @pytest.mark.exception
    @pytest.mark.parametrize('a, b', [
        (-100, 36),
        (100, -1),
        (-5, -18),
        (24.0, 36),
        (10, 4.5),
        (856.5, 422.1)
    ])
    def test_main_func_unsuitable_args(a, b):
        with pytest.raises(ValueError):
&gt;           main_func(a, b)
E           Failed: DID NOT RAISE &lt;class 'ValueError'&gt;

tests/pytest/test_task_329.py:55: Failed</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167518" status="failed" stop="1521801167522">
      <name>test_main_func_unsuitable_args[24.0-36]</name>
      <failure>
        <message>TypeError: 'float' object cannot be interpreted as an integer</message>
        <stack-trace>a = 24.0, b = 36

    @pytest.mark.exception
    @pytest.mark.parametrize('a, b', [
        (-100, 36),
        (100, -1),
        (-5, -18),
        (24.0, 36),
        (10, 4.5),
        (856.5, 422.1)
    ])
    def test_main_func_unsuitable_args(a, b):
        with pytest.raises(ValueError):
&gt;           main_func(a, b)

tests/pytest/test_task_329.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n_number = 24.0, m_number = 36

    def main_func(n_number, m_number):
        """
        Get all smaller and natural numbers, the square of the sum of the digits of which is equal to m.
    
        Arg:
            n_number(int): any natural number
            m_number(int): any natural number
    
        Return:
            list, where the numbers returned, the sum of digits equal to m.
        """
        counter_list = []
&gt;       for i in range(n_number):
E       TypeError: 'float' object cannot be interpreted as an integer

tasks/task_329.py:33: TypeError</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167523" status="failed" stop="1521801167528">
      <name>test_main_func_unsuitable_args[10-4.5]</name>
      <failure>
        <message>Failed: DID NOT RAISE &lt;class 'ValueError'&gt;</message>
        <stack-trace>a = 10, b = 4.5

    @pytest.mark.exception
    @pytest.mark.parametrize('a, b', [
        (-100, 36),
        (100, -1),
        (-5, -18),
        (24.0, 36),
        (10, 4.5),
        (856.5, 422.1)
    ])
    def test_main_func_unsuitable_args(a, b):
        with pytest.raises(ValueError):
&gt;           main_func(a, b)
E           Failed: DID NOT RAISE &lt;class 'ValueError'&gt;

tests/pytest/test_task_329.py:55: Failed</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167529" status="failed" stop="1521801167534">
      <name>test_main_func_unsuitable_args[856.5-422.1]</name>
      <failure>
        <message>TypeError: 'float' object cannot be interpreted as an integer</message>
        <stack-trace>a = 856.5, b = 422.1

    @pytest.mark.exception
    @pytest.mark.parametrize('a, b', [
        (-100, 36),
        (100, -1),
        (-5, -18),
        (24.0, 36),
        (10, 4.5),
        (856.5, 422.1)
    ])
    def test_main_func_unsuitable_args(a, b):
        with pytest.raises(ValueError):
&gt;           main_func(a, b)

tests/pytest/test_task_329.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n_number = 856.5, m_number = 422.1

    def main_func(n_number, m_number):
        """
        Get all smaller and natural numbers, the square of the sum of the digits of which is equal to m.
    
        Arg:
            n_number(int): any natural number
            m_number(int): any natural number
    
        Return:
            list, where the numbers returned, the sum of digits equal to m.
        """
        counter_list = []
&gt;       for i in range(n_number):
E       TypeError: 'float' object cannot be interpreted as an integer

tasks/task_329.py:33: TypeError</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167535" status="passed" stop="1521801167536">
      <name>test_main_func_str_arg[21-250]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167536" status="failed" stop="1521801167540">
      <name>test_main_func_str_arg[21-251]</name>
      <failure>
        <message>Failed: DID NOT RAISE &lt;class 'TypeError'&gt;</message>
        <stack-trace>a = 21, b = '25'

    @pytest.mark.exception
    @pytest.mark.parametrize('a, b', [
        ('21', 25),
        (21, '25'),
        ('21', '25')
    ])
    def test_main_func_str_arg(a, b):
        with pytest.raises(TypeError):
&gt;           main_func(a, b)
E           Failed: DID NOT RAISE &lt;class 'TypeError'&gt;

tests/pytest/test_task_329.py:66: Failed</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1521801167540" status="passed" stop="1521801167542">
      <name>test_main_func_str_arg[21-252]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="28462-MainThread"/>
        <label name="host" value="zoe-HP-ProBook-4540s"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
  </test-cases>
</ns0:test-suite>
